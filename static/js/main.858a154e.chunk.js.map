{"version":3,"sources":["components/NavBar/logo.png","components/Main/background.jpg","components/Brief/news2.jpeg","components/App/Wechat.jpeg","components/App/Connecting.jpg","components/App/Culture influencer.jpg","serviceWorker.js","components/NavBar/NavBar.js","components/Main/Main.js","components/News/News.js","components/NewsList/NewsList.js","components/Brief/Brief.js","components/Service/Service.js","components/ServiceList/ServiceList.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setLangType","bind","assertThisInitialized","type","langType","_this2","react_default","a","createElement","className","Link","to","target","src","logo","alt","intl","get","id","onClick","React","Component","Main","handleClick","style","backgroundImage","concat","Background","News","news","href","srcUrl","rel","imageSrc","source","class","header","NewsList","newsList","map","components_News_News","key","time","news2image","Brief","components_Main_Main","components_NewsList_NewsList","Service","service","description","ServiceList","serviceList","components_Service_Service","Footer","email","handleChange","handleKeyPress","handleSubmit","event","setState","value","preventDefault","refs","Email","alert","process","action","onSubmit","autoComplete","name","ref","placeholder","required","onChange","onKeyPress","locales","en_US","EN","zh_CN","ZH","Wechat","Connecting","Culture_Influencer","App","localStorage","setItem","reload","loadLocales","init","currentLocale","getItem","then","initDone","components_NavBar_NavBar","Switch","Route","exact","path","component","render","components_ServiceList_ServiceList","Redirect","from","components_Footer_Footer","ReactDOM","HashRouter","basename","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.858a154e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.396f3729.png\";","module.exports = __webpack_public_path__ + \"static/media/background.46d4f952.jpg\";","module.exports = __webpack_public_path__ + \"static/media/news2.78ad0f0a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Wechat.d5492d6c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Connecting.59cf3f43.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Culture influencer.8543b26c.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n    import React from 'react';\n    import { Link } from 'react-router-dom'\n    import logo from './logo.png';\n    import './NavBar.css';\n    import intl from 'react-intl-universal';\n  \n  class NavBar extends React.Component{\n      constructor(props){\n          super(props);\n  \n          this.state = {\n          };\n\n          this.setLangType = this.setLangType.bind(this);\n      }\n  \n      setLangType(type){\n        this.props.langType(type);\n      }\n\n      render(){\n          return (\n              <nav className=\"NavBar\">\n                  <nav className=\"nav desktopNav\">\n                      <div className=\"navLogo\">\n                      <Link to='/' className=\"complex\" target=\"_self\">\n                          <img src={logo} className=\"logo\" alt=\"logo\"/>\n                      </Link>\n                      <span className=\"companyName\">{intl.get(\"company_name\")}</span> \n                      </div>\n                      \n                      <div className=\"navContent\" id=\"nav_content\">\n                        <Link to='/' className=\"navItem\" target=\"_self\" id =\"home\">{intl.get(\"home\")}</Link>  \n                        <Link to='/service' className=\"navItem\" target=\"_self\" id =\"service\">{intl.get(\"service\")}</Link> \n                      </div>\n  \n                      <div className=\"language\">\n                      <span onClick={()=>{this.setLangType(\"en_US\")}}>EN</span> | <span onClick={()=>{this.setLangType(\"zh_CN\")}}>中文</span>\n                      </div>\n                  </nav>\n              </nav>\n          );\n      }\n  }\n  \n  export default NavBar;","  import React from 'react'\n  import './Main.css'\n  import Background from './background.jpg'\n  \n  class Main extends React.Component{\n      constructor(props){\n          super(props);\n          this.state = {\n          };\n          this.handleClick = this.handleClick.bind(this);\n      }\n\n      handleClick(){\n    \n      }    \n\n      render(){\n          return (\n            <main>\n              <div className=\"jumbotron\" style={{backgroundImage: `url(${Background})`}}>\n                <div className=\"container\">  \n                  <div className=\"header\">  \n                    <h1>Well-informed</h1>\n                    <h1>Inspired</h1>\n                    <h1>Trustworthy</h1>\n                  </div>\n                </div>\n              </div>\n            </main>\n          );\n      }\n  }\n  \n  export default Main;","import React from 'react'\nimport './News.css'\n\nclass News extends React.Component{\n    render(){\n        const news = this.props.news;\n\n        return (\n            <a href={news.srcUrl} target=\"_blank\" className=\"news\" rel=\"noopener noreferrer\">\n                <div className=\"image-container\">\n                    <img src={news.imageSrc} alt=''/>\n                </div>\n                <div className=\"newsContent\">\n                    <div className=\"details\">\n                        <h5>{news.source} <i class=\"icon fa fa-fw fa-external-link\"></i></h5>\n                        <h4>{news.header}</h4>\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nexport default News;","import React from 'react'\nimport './NewsList.css'\nimport News from '../News/News'\n\nclass NewsList extends React.Component{\n    render(){\n        return (\n            <div className=\"newsList\" id='news'>\n                {\n                    this.props.newsList.map(news => \n                        <News news={news} key={news.id}/>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default NewsList;\n","  import React from 'react'\n  import './Brief.css'\n  import Main from '../Main/Main';\n  import NewsList from '../NewsList/NewsList';\n  import news2image from './news2.jpeg'\n\n  const news1 = {\n    id: 1,\n    imageSrc: 'https://www.canadastudynews.com/wp-content/uploads/2017/08/Huang-Yang-300x225.jpg',\n    srcUrl: 'https://www.canadastudynews.com/2017/08/14/tech-graduates-bridging-gap-between-canadian-chinese-entrepreneurs/',\n    time: 'August 14, 2017',\n    header: 'Meet the Tech Graduates Bridging the Gap Between Canadian and Chinese Entrepreneurs',\n    source: '\bCANADA STUDY NEWS '\n  };\n  \n  const news2 = {\n    id: 2,\n    imageSrc: news2image,\n    srcUrl: 'https://uwaterloo.ca/arts/news/master-digital-experience-innovation-graduates-build-digital',\n    time: 'August 04, 2017',\n    header: 'Master of Digital Experience Innovation graduates build digital bridges to China',\n    source: 'UNIVERSITY OF WATERLOO'\n  };\n  \n  const news3 = {\n    id: 3,\n    imageSrc: 'https://dynamicmedia.zuza.com/zz/m/original_/7/a/7a17d0f0-ae58-4c44-87d6-e1472117a93a/B823471192Z.1_20170802102244_000_G411U6M48.1_Super_Portrait.jpg',\n    srcUrl: 'https://www.therecord.com/news-story/7482497-tech-writers-build-digital-bridges-to-china/',\n    time: 'August 03, 2017',\n    header: 'Tech writers build digital bridges to China',\n    source: 'THE RECORD'\n  };\n  \n  const newsList = [\n    news1,\n    news2,\n    news3,\n  ];\n\n  class Brief extends React.Component{\n      constructor(props){\n          super(props);\n          this.state = {\n          };\n          this.handleClick = this.handleClick.bind(this);\n      }\n\n      handleClick(){\n    \n      }    \n\n      render(){\n          return (\n            <div className='brief'>\n              <Main />\n              \n              <h2>About Us</h2>\n              <p>The Chinese in Canada hate it when they don’t know how to pursue a better life in a different/unfamiliar environment by themselves.\n              They would love it if there is a cultural and lifestyle leader that give advice and guidance to help them succeed, a community that they belong to, a leader that they can rely on. \n              </p>\n              \n              <p>That’s what we do at W.I.T Insider, We help the Chinese Canadian community live a better life by building the community where they can get Informative and related content concerning cultural differences, find their packs through interacted conversations and feel connected again with both sides.\n              </p>\n              \n              <h3>in the news</h3>\n              <NewsList newsList={newsList}/> \n            </div>\n          );\n      }\n  }\n  \n  export default Brief;","  import React from 'react'\n  import './Service.css'\n  \n  class Service extends React.Component{\n      render(){\n          const service = this.props.service;\n\n          return (\n            <div className=\"service\">  \n              <div className=\"image\">\n                <img src={service.imageSrc} alt=\"\"/>\n              </div> \n  \n              <div className=\"details\">\n                <h2>{service.header}</h2>\n                <p>{service.description}</p>\n              </div>\n            </div>\n          );\n      }\n  }\n\n  /*const Service = (service) => {\n    return (\n      <div className=\"service\">  \n        <div className=\"image\">\n          <img src={service.imageSrc} alt=\"\"/>\n        </div> \n\n        <div className=\"details\">\n          <h2>{service.name}</h2>\n          <p>{service.description}</p>\n          <a href=\"#\">{intl.get(\"read_more\")}</a><br/>\n        </div>\n      </div>\n    );\n  }*/\n  export default Service;","  import React from 'react'\n  import './ServiceList.css'\n  import Service from '../Service/Service'\n  \n  \n  class ServiceList extends React.Component{\n      render(){\n          return (\n            <div className=\"serviceList\">\n            \n            {\n                this.props.serviceList.map(service => \n                    <Service service={service} key={service.id}/>\n                )\n            }\n            </div> \n          );\n      }\n  }\n\n  /*const ServiceList = (props) => {\n    return (\n        <div className=\"serviceList\">\n        {\n            props.serviceList.map(service => \n                <Service service={service} key={service.id}/>\n            )\n        }\n        </div> \n      );\n  }*/\n  export default ServiceList;","\n    import React from 'react';\n    import { Link } from 'react-router-dom'\n    import './Footer.css';\n\n    import intl from 'react-intl-universal';\n  \n  class Footer extends React.Component{\n      constructor(props){\n          super(props);\n  \n          this.state = {\n              email: ''\n          };\n\n          this.handleChange = this.handleChange.bind(this);\n          this.handleKeyPress = this.handleKeyPress.bind(this);\n          this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n      handleChange(event){\n        this.setState({email : event.target.value});\n        //console.log(\"change\"+this.state.email)\n      }\n\n      handleKeyPress(event){\n        if (event.key === 'Enter') {\n          event.preventDefault();\n        }\n      }\n\n      handleSubmit(event){\n        event.preventDefault(); \n        //this.setState({email : this.refs.Email.value});\n        //console.log(\"submit \"+this.state.email)\n\n        //document.getElementById(\"email\").value='';\n        //document.getElementsByName(\"email\")[0].value='';\n        this.refs.Email.value='';\n        alert('You have signed up now! Thanks, we will be in touch!')\n      }\n\n      render(){\n          return (\n            <footer>\n            <div className=\"container\">\n              <div className=\"row\">\n                <section className=\"groups\">\n                  <div className=\"company group\">\n                    <header>{intl.get(\"company\")}</header><br/>\n                    <ul className=\"footer-links\">\n                      <li><Link to={`${process.env.PUBLIC_URL}/#news`} className=\"link\" target=\"_self\">{intl.get(\"press\")}</Link></li>\n                      <li><Link to='/service' className=\"link\" target=\"_self\">{intl.get(\"service\")}</Link></li>\n                    </ul>\n                  </div>\n                  \n                  <div className=\"help group\">\n                    <header>{intl.get(\"help\")}</header><br/>\n                    <ul className=\"footer-links\">\n                      <li><a href=\"mailto:rita.h@witinsider.com\" className=\"link\" target=\"_self\">{intl.get(\"contact_us\")}</a></li>\n                    </ul>\n                  </div>\n                </section>\n  \n                <section className=\"signup\">\n                  <div className=\"emailSignup\">\n                    <p>{intl.get(\"sign_up_for_newsletters\")}</p>\n                    <form action='' onSubmit={this.handleSubmit} autoComplete=\"on\" className=\"emailCapture\">\n                      <input type=\"email\" name=\"email\" ref=\"Email\" placeholder={intl.get(\"enter_your_email\")} autoComplete=\"on\" required onChange={this.handleChange} onKeyPress={this.handleKeyPress} id=\"email\" className=\"email\" />\n                      <input type=\"submit\" className=\"button\" value={intl.get(\"sign_up\") }/>                      \n                    </form>\n                  </div>\n                </section>\n              </div>\n  \n              <hr/>\n  \n              <div className=\"row\">\n                <section className=\"legal\">\n                  <p className=\"copyright\">&copy; 2019 {intl.get(\"company_name\")}</p>\n                </section>\n  \n                <section className=\"social\">\n                  <ul className=\"social-icons\">\n                    <li><a href=\"https://www.facebook.com/witinsider/\" className=\"facebook\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fa fa-facebook\"></i></a></li>\n                    <li> <a href=\"https://twitter.com/witinsider/\" className=\"twitter\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fa fa-twitter\"></i></a></li>\n                    <li><a href=\"https://www.instagram.com/witinsider/\" className=\"instagram\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fa fa-instagram\"></i></a></li>\n                    <li><a href=\"https://www.linkedin.com/company/witinsider/\" className=\"linkedin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fa fa-linkedin\"></i></a></li>   \n                  </ul>\n                </section>\n              </div>\n              \n            </div>\n          </footer>\n          );\n      }\n  }\n  \n  export default Footer;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom'\nimport NavBar from '../NavBar/NavBar';\nimport Brief from '../Brief/Brief';\nimport ServiceList from '../ServiceList/ServiceList';\nimport Footer from '../Footer/Footer';\nimport './App.css';\n\nimport intl from 'react-intl-universal';\nimport EN from './languages/text-en.json';\nimport ZH from './languages/text-zh.json';\n\nimport Wechat from './Wechat.jpeg'\nimport Connecting from './Connecting.jpg'\nimport Culture_Influencer from './Culture influencer.jpg'\n\nconst locales = {\n    \"en_US\": EN,\n    \"zh_CN\": ZH,\n};\n\nconst service1 = {\n  id: 1,\n  imageSrc: Wechat,\n  header: 'Wechat Media Kit',\n  description: 'We create customized contents to help the business reach to our followers. \\\n  At the same time, we manage the social media accounts and WeChat Platforms for the business owners to make their life easier.'\n};\n\nconst service2 = {\n  id: 2,\n  imageSrc: Connecting,\n  header: 'Connecting',\n  description: 'We connect all the dots together, which means we are match-maker pro! \\\n  Not only for the single, but also we connect employers with the right condidates.'\n};\n\nconst service3 = {\n  id: 3,\n  imageSrc: Culture_Influencer,\n  header: 'Culture Influencer',\n  description: 'As we mentioned, we are the bridge between the Chinese and Canadian community. \\\n  So language is always the first thing when we talk about the cultrue. \\\n  We have regular Chinese classes open to local who are interested in Chinese culture and language. Come and learn with us!'\n};\n\nconst serviceList = [\n  service1,\n  service2,\n  service3\n];\n\nconst news1 = {\n  id: 1,\n  imageSrc: 'https://www.canadastudynews.com/wp-content/uploads/2017/08/Huang-Yang-300x225.jpg',\n  srcUrl: 'https://www.canadastudynews.com/2017/08/14/tech-graduates-bridging-gap-between-canadian-chinese-entrepreneurs/',\n  time: 'August 14, 2017',\n  header: 'Meet the Tech Graduates Bridging the Gap Between Canadian and Chinese Entrepreneurs',\n  source: ''\n};\n\nconst news2 = {\n  id: 2,\n  imageSrc: 'https://www.canadastudynews.com/wp-content/uploads/2017/08/Huang-Yang-300x225.jpg',\n  srcUrl: 'https://uwaterloo.ca/arts/news/master-digital-experience-innovation-graduates-build-digital',\n  time: 'August 04, 2017',\n  header: 'Master of Digital Experience Innovation graduates build digital bridges to China',\n  source: ''\n};\n\nconst news3 = {\n  id: 3,\n  imageSrc: 'https://dynamicmedia.zuza.com/zz/m/original_/7/a/7a17d0f0-ae58-4c44-87d6-e1472117a93a/B823471192Z.1_20170802102244_000_G411U6M48.1_Super_Portrait.jpg',\n  srcUrl: 'https://www.therecord.com/news-story/7482497-tech-writers-build-digital-bridges-to-china/',\n  time: 'August 03, 2017',\n  header: 'Tech writers build digital bridges to China',\n  source: ''\n};\n\nconst newsList = [\n  news1,\n  news2,\n  news3,\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      initDone: false,\n    };\n\n    this.langType = this.langType.bind(this);\n  }\n\n  langType = (type) =>{\n    localStorage.setItem('lang_type', type);\n    window.location.reload();\n  }\n\n  loadLocales=()=> {  \n      // init method will load CLDR locale data according to currentLocale\n      // react-intl-universal is singleton, so you should init it only once in your app\n      intl.init({\n          currentLocale: localStorage.getItem('lang_type')||'en_US',  \n          locales,\n      }).then(() => {\n          // After loading CLDR locale data, start to render\n          this.setState({initDone: true});\n      });\n  };\n\n  componentDidMount() {\n      this.loadLocales();\n  }\n\n  /*<Route exact path='/news' render={() => (\n              <NewsList newsList={newsList}/> \n            )}/>*/\n  render() {\n    return (\n      this.state.initDone && <div className=\"App\">\n        <NavBar langType={this.langType}/>   \n\n        <Switch>\n            <Route exact path='/' component={Brief} />\n            <Route exact path='/service' render={() => (\n              <ServiceList serviceList={serviceList}/>\n            )}/>\n            <Redirect from='*' to='/' />\n        </Switch>  \n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n            ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './components/App/App';\n\n//ReactDOM.render(<App />, document.getElementById('root'))\nReactDOM.render((\n    <HashRouter basename={`${process.env.PUBLIC_URL}`}> \n        <App/>\n    </HashRouter>\n    ), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}